name: Sync Rules

on:
  workflow_dispatch:
  schedule:
    - cron: "30 * * * *"
  
jobs:
  Sync-Rules:
    runs-on: ubuntu-latest
    env:
      TZ: 'Asia/Shanghai'
      REPO_PATH: 'esdeath-repo'
    
    steps:
    - name: Checkout target repository
      uses: actions/checkout@v4.1.0
      with:
        repository: hchichi/esdeath
        path: ${{ env.REPO_PATH }}

    - name: Copy GeoIP Files
      run: |
        mkdir -p $REPO_PATH/GeoIP
        
        # Download GeoIP databases
        curl -L -o "$REPO_PATH/GeoIP/CN_Country.mmdb" "https://raw.githubusercontent.com/Masaiki/GeoIP2-CN/release/Country.mmdb"
        curl -L -o "$REPO_PATH/GeoIP/Global_Country.mmdb" "https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb"
        curl -L -o "$REPO_PATH/GeoIP/IPInfo_Country.mmdb" "https://github.com/xream/geoip/releases/latest/download/ipinfo.country.mmdb"
        curl -L -o "$REPO_PATH/GeoIP/IP2Location_Country.mmdb" "https://github.com/xream/geoip/releases/latest/download/ip2location.country.mmdb"

    - name: Copy Surge Rules
      run: |
        # Create all required directories first
        mkdir -p $REPO_PATH/Surge/Ruleset/{Apple,AI,Social,Google,Microsoft,Oracle,Streaming/{Video,Music},Extra,Reject,Direct,Anti/App,Domestic,CCC-Global,SpeedTest,GlobalMedia,Developer}

        # CCC Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/CCC-Global/Akamai.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/CCC-Global/Akamai.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/CCC-Global/Amazon.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/CCC-Global/Amazon.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/CCC-Global/CloudFlare.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/CCC-Global/CloudFlare.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/CCC-Global/HiNet.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/CCC-Global/HiNet.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/CCC-Global/VerizonMediaPlatform.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/CCC-Global/VerizonMediaPlatform.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/CCC-Global.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/CCC-Global.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/CCC-CN.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/CCC-CN.list"
        
        # SpeedTest Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/SpeedTest.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/SpeedTest.list"
        
        # Apple Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Apple/APNs.list" "https://proxyresource.pages.dev/Tool/Loon/Rule/ApplePushNotificationService.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Apple/Apple.list" "https://raw.githubusercontent.com/NobyDa/Script/master/Surge/Apple.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Apple/AppStore.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/source/rule/AppStore/AppStore.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Apple/AppleID.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/AppleID/AppleID.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Apple/AppleMusic.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/AppleMusic/AppleMusic.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Apple/iCloud.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/iCloud/iCloud.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Apple/TestFlight.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/TestFlight/TestFlight.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Apple/AppleProxy.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/AppleProxy/AppleProxy.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Apple/AppleMedia.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/AppleMedia/AppleMedia.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Apple/FitnessPlus.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/FitnessPlus/FitnessPlus.list"

        # AI Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/AI/OpenAI.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/Rules/OpenAi.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/AI/Claude.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Claude.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/AI/AI.list" "https://ruleset.skk.moe/List/non_ip/ai.conf"
        curl -L -o "$REPO_PATH/Surge/Ruleset/AI/AI_KELI.list" "https://proxyresource.pages.dev/Tool/Loon/Rule/AI.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/AI/AI_ConnersHua.list" "https://github.com/ConnersHua/RuleGo/raw/master/Surge/Ruleset/Extra/AI.list"
        # Extra Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Extra/Direct.list" "https://raw.githubusercontent.com/Repcz/Tool/X/Surge/Rules/Direct.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Extra/Reject.list" "https://raw.githubusercontent.com/Repcz/Tool/X/Surge/Rules/Reject.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Extra/Proxy.list" "https://raw.githubusercontent.com/Repcz/Tool/X/Surge/Rules/Proxy.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Extra/Prevent_DNS_Leaks.list" "https://raw.githubusercontent.com/Repcz/Tool/X/Surge/Rules/Prevent_DNS_Leaks.list"

        # Social Media Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Social/Twitter.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Twitter.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Social/Instagram.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Instagram.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Social/Facebook.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Facebook.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Telegram.list" "https://raw.githubusercontent.com/Repcz/Tool/X/Surge/Rules/Telegram.list"

        # Google Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Google/Google.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Google.list"

        # Microsoft Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Microsoft/Github.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Github.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Microsoft/OneDrive.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/OneDrive.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Microsoft/Microsoft.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Microsoft.list"

        # Development Rules
        #curl -L -o "$REPO_PATH/Surge/Ruleset/PROXY/Github.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/PROXY/Github.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Developer/Gitlab.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/PROXY/Gitlab.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Developer/App-Activation.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Special/App-Activation.list"

        # Oracle Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Oracle/Oracle.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Oracle/Oracle.list"

        # Streaming Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/CN.list" "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Streaming/CN.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/!CN.list" "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Streaming/!CN.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/BiliBiliIntl.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/BiliBiliIntl/BiliBiliIntl.list"
        #curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Music/NetEaseMusic.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Domestic-Services/NeteaseMusic.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/Bilibili.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bilibili.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/TikTok.list" "https://proxyresource.pages.dev/Tool/Loon/Rule/TikTok.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/Netflix.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Netflix.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/HBO.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBO/HBO.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/Disney.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Disney/Disney.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Music/Spotify.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/PrimeVideo.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/PrimeVideo/PrimeVideo.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/AppleMedia.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/AppleMedia/AppleMedia.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/Bahamut.list" "https://github.com/ACL4SSR/ACL4SSR/raw/master/Clash/Ruleset/Bahamut.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/ProxyMedia.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyMedia.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/YouTube.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/YouTube.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/GlobalMedia.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/GlobalMedia.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Music/NeteaseMusic.list" "https://ruleset.skk.moe/List/non_ip/neteasemusic.conf"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Music/NeteaseMusic_NoIP.list" "https://ruleset.skk.moe/List/ip/neteasemusic.conf"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/Emby.list" "https://raw.githubusercontent.com/Repcz/Tool/X/Surge/Rules/Emby.list"

        # Custom Emby Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/EmbyTest.list" "https://github.com/1120109856/lynn/raw/main/fxw"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Streaming/Video/EmbyTest2.list" "https://github.com/1120109856/lynn/raw/main/zl"
        # GFW Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/ProxyGFW.list" "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/ProxyGFWlist.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Foreign.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/PROXY.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Proxy.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/Proxy/Proxy.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Global.list" "https://github.com/Tartarus2014/For-own-use/raw/master/Ruleset/Proxy.list"

        # Domestic Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Domestic/WeChat.list" "https://raw.githubusercontent.com/NobyDa/Script/master/Surge/WeChat.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/ChinaDomain.list" "https://ruleset.skk.moe/List/non_ip/domestic.conf"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Domestic_Sukkaw_NoIP.list" "https://ruleset.skk.moe/List/non_ip/domestic.conf"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Domestic_Sukkaw_IP.list" "https://ruleset.skk.moe/List/ip/domestic.conf"

        curl -L -o "$REPO_PATH/Surge/Ruleset/China.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/China/China.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/ChinaMax.list" "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/ChinaMax/ChinaMax.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/cn.list" "https://raw.githubusercontent.com/Blankwonder/surge-list/master/cn.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Domestic.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Domestic.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/CDN.list" "https://ruleset.skk.moe/List/domainset/cdn.conf"
        curl -L -o "$REPO_PATH/Surge/Ruleset/CDN_NoIP.list" "https://ruleset.skk.moe/List/non_ip/cdn.conf"
        curl -L -o "$REPO_PATH/Surge/Ruleset/DownloadCDN_Global.list" "https://proxyresource.pages.dev/Tool/Loon/Rule/InternationalDownloadCDN.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/DownloadCDN_CN.list" "https://proxyresource.pages.dev/Tool/Loon/Rule/ChinaDownloadCDN.list"
        
        # IPCIDR Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/ChinaIP_Sukkaw.list" "https://ruleset.skk.moe/List/ip/china_ip.conf"
        curl -L -o "$REPO_PATH/Surge/Ruleset/ChinaIP.list" "https://raw.githubusercontent.com/missuo/ASN-China/main/IP.China.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/ChinaIPv4.list" "https://raw.githubusercontent.com/missuo/ASN-China/main/IPv4.China.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/ChinaIPv6.list" "https://raw.githubusercontent.com/missuo/ASN-China/main/IPv6.China.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/ChinaASN.DH.list" "https://raw.githubusercontent.com/DH-Teams/DH-Geo_AS_IP_CN/main/Geo_AS_IP_CN_All_Surge.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/ChinaASN.list" "https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/ruleset/ASN.China.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/ChinaASN.missuo.list" "https://raw.githubusercontent.com/missuo/ASN-China/main/ASN.China.list"


        # Reject Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Advertising.list" "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Advertising.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Malicious.list" "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Malicious.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Tracking.list" "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Tracking.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Ads_EasyListChina.list" "https://raw.githubusercontent.com/limbopro/Adblock4limbo/main/rule/Surge/easylistchina_surge.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Ads_EasyListPrivacy.list" "https://raw.githubusercontent.com/limbopro/Adblock4limbo/main/rule/Surge/easyprivacy_surge.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Ads_Dlerio.list" "https://raw.githubusercontent.com/dler-io/Rules/main/Surge/Surge%203/Provider/Reject.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Ads_AWAvenue.list" "https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Surge.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/AdGuardChinese.list" "https://raw.githubusercontent.com/geekdada/surge-list/master/domain-set/chinese-filter.txt"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Ads_fmz200.list" "https://raw.githubusercontent.com/fmz200/wool_scripts/main/QuantumultX/filter/fenliu.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Ads_SukkaW.list" "https://ruleset.skk.moe/List/domainset/reject.conf"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Ads_SukkaW_NoIP.list" "https://ruleset.skk.moe/List/non_ip/reject.conf"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Ads_SukkaW_Extra.list" "https://ruleset.skk.moe/List/domainset/reject_extra.conf"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Ads_SukkaW_IP.list" "https://ruleset.skk.moe/List/ip/reject.conf"

        curl -L -o "$REPO_PATH/Surge/Ruleset/Reject/Ads_limbopro.list" "https://raw.githubusercontent.com/limbopro/Adblock4limbo/main/Adblock4limbo_surge.list"
        
        # Download and merge fmz200's Direct rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Direct/Direct_fmz200.list" "https://github.com/fmz200/wool_scripts/raw/main/QuantumultX/filter/fenliuxiuzheng.list"
        # Download and merge SukkaW's Direct rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Direct/Direct_Sukkaw.list" "https://ruleset.skk.moe/List/non_ip/direct.conf"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Direct/MyDirect_Sukkaw.list" "https://ruleset.skk.moe/List/non_ip/my_direct.conf"

        # Anti-IP Attribution Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Anti/Direct.list" "https://github.com/SunsetMkt/anti-ip-attribution/raw/main/generated/rule-set-direct.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Anti/Proxy.list" "https://github.com/SunsetMkt/anti-ip-attribution/raw/main/generated/rule-set-proxy.list"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Anti/Reject.list" "https://github.com/SunsetMkt/anti-ip-attribution/raw/main/generated/rule-set-reject.list"

        # Anti-IP Attribution App Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Anti/App/QQMusic.list" "https://github.com/SunsetMkt/anti-ip-attribution/raw/main/rules/QQ音乐.yaml"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Anti/App/Bilibili.list" "https://github.com/SunsetMkt/anti-ip-attribution/raw/main/rules/哔哩哔哩.yaml"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Anti/App/Xiaohongshu.list" "https://github.com/SunsetMkt/anti-ip-attribution/raw/main/rules/小红书.yaml"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Anti/App/Douban.list" "https://github.com/SunsetMkt/anti-ip-attribution/raw/main/rules/豆瓣.yaml"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Anti/App/NeteaseMusic.list" "https://github.com/SunsetMkt/anti-ip-attribution/raw/main/rules/网易云音乐.yaml"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Anti/App/WeChat.list" "https://github.com/SunsetMkt/anti-ip-attribution/raw/main/rules/微信.yaml"
        curl -L -o "$REPO_PATH/Surge/Ruleset/Anti/App/Douyin.list" "https://github.com/SunsetMkt/anti-ip-attribution/raw/main/rules/抖音.yaml"

        # Lan Rules
        curl -L -o "$REPO_PATH/Surge/Ruleset/Lan.list" "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Special/Local-LAN.list"

    - name: Edit Rules
      run: |
        cd $REPO_PATH/Surge/Ruleset
        
        # Common replacements for all rule files except Lan.list
        find . -type f -name "*.list" ! -name "Lan.list" -exec sed -i \
          -e 's/, /,/g' \
          -e 's/;/# /g' \
          -e 's/\b\(host\|HOST\)\b/DOMAIN/g' \
          -e 's/\b\(host\|HOST\)-\(suffix\|keyword\|wildcard\)\b/DOMAIN-\U\2/g' \
          -e 's/\bip-cidr\b/IP-CIDR/g' \
          -e 's/\bgeoip\b/GEOIP/g' \
          -e 's/\bIP6-CIDR\b/IP-CIDR6/g' \
          -e 's/,\(REJECT\|DIRECT\|reject\|direct\)$//g' \
          -e '/# \(更新：\|AUTHOR:\|REPO:\|UPDATED:\|数目: \|规则: \)/d' \
          -e '/404: Not Found/d' \
          {} \;

        # Add no-resolve to IP rules if missing
        #find . -type f -name "*.list" -exec sh -c '
        find . -type f -name "*.list" ! -name "*_Resolve.list" -exec sh -c '
          for file do
            awk "/^IP-/ && !/,no-resolve/ {print \$0\",no-resolve\"; next} {print}" "$file" > "$file.tmp" && mv "$file.tmp" "$file"
          done
        ' sh {} +

        # Convert domain-set to rule-set for specific files
        for file in Reject/AdGuardChinese.list Reject/Ads_AWAvenue.list Reject/Ads_SukkaW.list Reject/Ads_SukkaW_Extra.list CDN.list; do
          if [ -f "$file" ]; then
            sed -i -e '/^\./s/^\./DOMAIN-SUFFIX,/' \
                   -e '/^\s*$/b; /^\s*#/b; /^DOMAIN-SUFFIX,/b; s/^\([^#]\)/DOMAIN,\1/' "$file"
          fi
        done

        # Process IP rules
        for file in ChinaIP.list ChinaIPv4.list ChinaIPv6.list; do
          if [ -f "$file" ]; then
            temp_file="${file}.tmp"
            while IFS= read -r line; do
              [[ -z "$line" || "$line" =~ ^[[:space:]]*# ]] && continue
              
              if [[ "$line" =~ .*:.* ]]; then
                # IPv6 address
                if [[ ! "$line" =~ ^IP-CIDR6, ]]; then
                  echo "IP-CIDR6,$line,no-resolve" >> "$temp_file"
                fi
              elif [[ "$line" =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2}$ ]]; then
                # IPv4 address
                if [[ ! "$line" =~ ^IP-CIDR, ]]; then
                  echo "IP-CIDR,$line,no-resolve" >> "$temp_file"
                fi
              else
                # Copy other lines as-is
                echo "$line" >> "$temp_file"
              fi
            done < "$file"
            mv "$temp_file" "$file"
          fi
        done

    - name: Merge and Process Rules
      run: |
        cd $REPO_PATH/Surge/Ruleset

        # Generate no-resolve versions of IP rules
        for file in ChinaIP.list ChinaIPv4.list ChinaIPv6.list; do
          if [ -f "$file" ]; then
            resolve_file="${file%.*}_Resolve.list"
            sed 's/,no-resolve$//' "$file" > "$resolve_file"
          fi
        done

        # Merge Reject rules
        if [ -f "Reject/Reject.list" ]; then
          cat Reject/Advertising.list >> Reject/Reject.list
          cat Reject/Malicious.list >> Reject/Reject.list
          cat Reject/Tracking.list >> Reject/Reject.list
        fi

        # Merge SukkaW rules into Ads_SukkaW.list
        if [ -f "Reject/Ads_SukkaW.list" ]; then
          cat Reject/Ads_SukkaW_NoIP.list >> Reject/Ads_SukkaW.list
          cat Reject/Ads_SukkaW_Extra.list >> Reject/Ads_SukkaW.list
          cat Reject/Ads_SukkaW_IP.list >> Reject/Ads_SukkaW.list
          
          rm -f Reject/Ads_SukkaW_NoIP.list
          rm -f Reject/Ads_SukkaW_Extra.list
          rm -f Reject/Ads_SukkaW_IP.list
        fi

        # Merge Domestic_Sukkaw rules
        cat Domestic_Sukkaw_NoIP.list Domestic_Sukkaw_IP.list > Domestic_Sukkaw.list
        rm -f Domestic_Sukkaw_NoIP.list Domestic_Sukkaw_IP.list


        # Merge CDN rules
        if [ -f "CDN.list" ] && [ -f "CDN_NoIP.list" ]; then
          cat CDN_NoIP.list >> CDN.list
          rm -f CDN_NoIP.list
        fi

        # Merge NetEase Music rules
        if [ -f "Streaming/Music/NeteaseMusic.list" ] && [ -f "Streaming/Music/NeteaseMusic_NoIP.list" ]; then
          cat Streaming/Music/NeteaseMusic_NoIP.list >> Streaming/Music/NeteaseMusic.list
          rm -f Streaming/Music/NeteaseMusic_NoIP.list
        fi

        # Merge Emby rules
        if [ -f "Streaming/Video/EmbyTest.list" ] && [ -f "Streaming/Video/EmbyTest2.list" ]; then
          cat Streaming/Video/EmbyTest2.list >> Streaming/Video/EmbyTest.list
          rm -f Streaming/Video/EmbyTest2.list
        fi

        # Process AI Rules
        cd AI
        curl -L -o "AI_Hiven.list" "https://raw.githubusercontent.com/hiven425/hiven/master/config/AI.list"

        # Combine AI rules and ensure DOMAIN-SUFFIX,openrouter.ai is present
        cat AI_KELI.list AI_ConnersHua.list AI_Hiven.list | sort -u | tee AI.list | grep -q "DOMAIN-SUFFIX,openrouter.ai" || echo "DOMAIN-SUFFIX,openrouter.ai" >> AI.list

        # Clean up temporary files
        rm -f AI_Hiven.list

      # 去重排序

    - name: Clean and Sort Rules
      run: |
        cd $REPO_PATH/Surge/Ruleset
              
        # Function to add header comments
        add_header() {
          local file=$1
          local title=$2
          local description=$3
          local sources=$4
          local temp_file="${file}.tmp"
          
          # Count different types of rules
          local domain_count=$(grep -c "^DOMAIN," "$file")
          local domain_suffix_count=$(grep -c "^DOMAIN-SUFFIX," "$file")
          local domain_keyword_count=$(grep -c "^DOMAIN-KEYWORD," "$file")
          local ip_asn_count=$(grep -c "^IP-ASN," "$file")
          local ip_cidr_count=$(grep -c "^IP-CIDR," "$file")
          local ip_cidr6_count=$(grep -c "^IP-CIDR6," "$file")
          local process_name_count=$(grep -c "^PROCESS-NAME," "$file")
          local user_agent_count=$(grep -c "^USER-AGENT," "$file")
          local url_regex_count=$(grep -c "^URL-REGEX," "$file")
          local geoip_count=$(grep -c "^GEOIP," "$file")
          
          # Calculate total
          local total_count=$((domain_count + domain_suffix_count + domain_keyword_count + 
                             ip_asn_count + ip_cidr_count + ip_cidr6_count + 
                             process_name_count + user_agent_count + url_regex_count + 
                             geoip_count))
          
          {
            echo "# $title"
            echo "#"
            echo "# Last Updated: $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M')"
            echo "#"
            echo "# Rule Statistics:"
            [ $domain_count -gt 0 ] && echo "# DOMAIN: $domain_count"
            [ $domain_suffix_count -gt 0 ] && echo "# DOMAIN-SUFFIX: $domain_suffix_count"
            [ $domain_keyword_count -gt 0 ] && echo "# DOMAIN-KEYWORD: $domain_keyword_count"
            [ $ip_asn_count -gt 0 ] && echo "# IP-ASN: $ip_asn_count"
            [ $ip_cidr_count -gt 0 ] && echo "# IP-CIDR: $ip_cidr_count"
            [ $ip_cidr6_count -gt 0 ] && echo "# IP-CIDR6: $ip_cidr6_count"
            [ $process_name_count -gt 0 ] && echo "# PROCESS-NAME: $process_name_count"
            [ $user_agent_count -gt 0 ] && echo "# USER-AGENT: $user_agent_count"
            [ $url_regex_count -gt 0 ] && echo "# URL-REGEX: $url_regex_count"
            [ $geoip_count -gt 0 ] && echo "# GEOIP: $geoip_count"
            echo "# TOTAL: $total_count"
            echo "#"
            echo "# $description"
            echo "#"
            echo "# Data from:"
            echo -e "$sources" | sed 's/^/#  - /'
            echo ""
          } > "$temp_file"
          
          # Append original content
          cat "$file" >> "$temp_file"
          mv "$temp_file" "$file"
        }
        
        # Only process specific merged files
        for file in CDN.list Streaming/Music/NeteaseMusic.list Reject/Reject.list Reject/Ads_SukkaW.list AI/AI.list Direct/Direct_Sukkaw.list; do
          if [ -f "$file" ]; then
            # Create temporary file in the same directory
            temp_file="${file}.tmp"
            grep -v '^\s*#' "$file" | grep -v '^\s*$' | sort -u > "$temp_file"
            mv "$temp_file" "$file"
          fi
        done

        if [ -f "AI/AI.list" ]; then
          add_header "AI/AI.list" \
                    "AI Rules" \
                    "Combined AI rules" \
                    "https://ruleset.skk.moe/List/non_ip/ai.conf\nhttps://raw.githubusercontent.com/hiven425/hiven/master/config/AI.list\nhttps://proxyresource.pages.dev/Tool/Loon/Rule/AI.list\nhttps://github.com/ConnersHua/RuleGo/raw/master/Surge/Ruleset/Extra/AI.list"
        fi

        # Add headers after cleaning and sorting
        if [ -f "Reject/Reject.list" ]; then
          add_header "Reject/Reject.list" \
                    "Advertising Reject Rules" \
                    "Combined advertising/hijacking/tracking blocking rules" \
                    "https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Advertising.list\nhttps://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Malicious.list\nhttps://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Tracking.list"
        fi

        if [ -f "Reject/Ads_SukkaW.list" ]; then
          add_header "Reject/Ads_SukkaW.list" \
                    "SukkaW Reject Rules" \
                    "Combined SukkaW advertising rules" \
                    "https://ruleset.skk.moe/List/domainset/reject.conf\nhttps://ruleset.skk.moe/List/non_ip/reject.conf\nhttps://ruleset.skk.moe/List/domainset/reject_extra.conf\nhttps://ruleset.skk.moe/List/ip/reject.conf"
        fi

        if [ -f "Direct/Direct_Sukkaw.list" ]; then
          add_header "Direct/Direct_Sukkaw.list" \
                    "SukkaW Direct Rules" \
                    "Combined SukkaW direct rules" \
                    "https://ruleset.skk.moe/List/domainset/direct.conf\nhttps://ruleset.skk.moe/List/non_ip/direct.conf"
        fi

        if [ -f "CDN.list" ]; then
          add_header "CDN.list" \
                    "SukkaW CDN Rules" \
                    "Combined SukkaW CDN rules" \
                    "https://ruleset.skk.moe/List/domainset/cdn.conf\nhttps://ruleset.skk.moe/List/non_ip/cdn.conf"
        fi

        if [ -f "Streaming/Music/NeteaseMusic.list" ]; then
          add_header "Streaming/Music/NeteaseMusic.list" \
                    "SukkaW NetEaseMusic Rules" \
                    "Combined SukkaW neteasemusic rules" \
                    "https://ruleset.skk.moe/List/non_ip/neteasemusic.conf\nhttps://ruleset.skk.moe/List/ip/neteasemusic.conf"
        fi

        if [ -f "Streaming/Video/EmbyTest.list" ]; then
          add_header "Streaming/Video/EmbyTest.list" \
                    "Emby Rules" \
                    "Combined Emby rules" \
                    "https://github.com/1120109856/lynn/raw/main/fxw\nhttps://github.com/1120109856/lynn/raw/main/zl"
        fi

        if [ -f "ChinaIP.list" ]; then
          add_header "ChinaIP.list" \
                    "China CIDR Rules" \
                    "China CIDR rules with no-resolve option" \
                    "https://raw.githubusercontent.com/missuo/ASN-China/main/IP.China.list"
        fi

        if [ -f "ChinaIP_Resolve.list" ]; then
          add_header "ChinaIP_Resolve.list" \
                    "China CIDR Rules" \
                    "China CIDR rules without no-resolve option" \
                    "https://raw.githubusercontent.com/missuo/ASN-China/main/IP.China.list"
        fi

        if [ -f "ChinaIPv4.list" ]; then
          add_header "ChinaIPv4.list" \
                    "China CIDR Rules (IPv4)" \
                    "China CIDR rules (IPv4) with no-resolve option" \
                    "https://raw.githubusercontent.com/missuo/ASN-China/main/IPv4.China.list"
        fi

        if [ -f "ChinaIPv4_Resolve.list" ]; then
          add_header "ChinaIPv4_Resolve.list" \
                    "China CIDR Rules (IPv4)" \
                    "China CIDR rules (IPv4) without no-resolve option" \
                    "https://raw.githubusercontent.com/missuo/ASN-China/main/IPv4.China.list"
        fi

        if [ -f "ChinaIPv6.list" ]; then
          add_header "ChinaIPv6.list" \
                    "China CIDR Rules (IPv6)" \
                    "China CIDR rules (IPv6) with no-resolve option" \
                    "https://raw.githubusercontent.com/missuo/ASN-China/main/IPv6.China.list"
        fi

        if [ -f "ChinaIPv6_Resolve.list" ]; then
          add_header "ChinaIPv6_Resolve.list" \
                    "China CIDR Rules (IPv6)" \
                    "China CIDR rules (IPv6) without no-resolve option" \
                    "https://raw.githubusercontent.com/missuo/ASN-China/main/IPv6.China.list"
        fi

    - name: Commit Changes
      run: |
        cd $REPO_PATH
        if [[ -n $(git status -s) ]]; then
          git config --local user.email "rin.tohsaka@fate-stay-night.com"
          git config --local user.name "Rin Tohsaka"
          git add .
          git commit -m "✨ Auto Update by Rin $(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M')"
          git push origin HEAD
        fi

    - name: Cleanup Workflow Runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2